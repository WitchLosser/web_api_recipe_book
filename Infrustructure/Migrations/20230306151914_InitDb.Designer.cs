// <auto-generated />
using Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20230306151914_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataAccess.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Ingredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Egg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "beef"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fish"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tomato"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Oil"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sugar"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Ketchup"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Spageti"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Dought"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Sour cream"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MinToCook")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MinToCook = 40,
                            Name = "Carbonara"
                        },
                        new
                        {
                            Id = 2,
                            MinToCook = 15,
                            Name = "Omlete"
                        },
                        new
                        {
                            Id = 3,
                            MinToCook = 45,
                            Name = "Roast beef"
                        },
                        new
                        {
                            Id = 4,
                            MinToCook = 60,
                            Name = "Baked fish"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredient");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 5,
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 9,
                            RecipeId = 1
                        },
                        new
                        {
                            IngredientId = 1,
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 6,
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 8,
                            RecipeId = 2
                        },
                        new
                        {
                            IngredientId = 2,
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 6,
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 8,
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 11,
                            RecipeId = 3
                        },
                        new
                        {
                            IngredientId = 3,
                            RecipeId = 4
                        },
                        new
                        {
                            IngredientId = 4,
                            RecipeId = 4
                        },
                        new
                        {
                            IngredientId = 6,
                            RecipeId = 4
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("DataAccess.Entities.Ingredient", "Ingredient")
                        .WithMany("Recipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("DataAccess.Entities.Ingredient", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("DataAccess.Entities.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
